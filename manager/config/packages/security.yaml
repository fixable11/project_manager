security:
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        fetcher:
            id: App\Security\UserProvider
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: ~
            user_checker: App\Security\UserChecker
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
                    - App\Security\OAuth\FacebookAuthenticator
                entry_point: App\Security\LoginFormAuthenticator
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
            logout:
                path: app_logout
#            logout:
#                path: app_logout
                # where to redirect after logout
                # target: app_any_route
#            remember_me:
#                secret:   '%kernel.secret%'
#                lifetime: 604800 # 1 week in seconds
#                path:     /
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
    role_hierarchy:
        ROLE_ADMIN:
            - ROLE_USER
            - ROLE_MANAGE_USERS
            - ROLE_WORK_MANAGE_MEMBERS
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/oauth, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/signup, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/reset, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: ROLE_USER }
